<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wu.monitor.mapper.AlarmMapper">

    <resultMap id="BaseResultMap" type="com.wu.monitor.model.Alarm">
        <id column="id" property="id" jdbcType="BIGINT" />
        <result column="time" property="time" jdbcType="TIMESTAMP" />
        <result column="geofence_id" property="geofenceId" jdbcType="BIGINT" />
        <result column="geofence_name" property="geofenceName" jdbcType="VARCHAR" />
        <result column="map_id" property="mapId" jdbcType="BIGINT" />
        <result column="map_name" property="mapName" jdbcType="VARCHAR" />
        <result column="alarm_tag" property="alarmTag" jdbcType="VARCHAR" />
        <result column="x" property="x" jdbcType="DOUBLE" />
        <result column="y" property="y" jdbcType="DOUBLE" />
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    </resultMap>

    <sql id="Base_Column_List">
        id, time, geofence_id, geofence_name, map_id, map_name, alarm_tag, x, y, create_time, update_time
    </sql>

    <insert id="insert" parameterType="com.wu.monitor.model.Alarm" useGeneratedKeys="true" keyProperty="id">
        insert into alarm (
          time, geofence_id, geofence_name, map_id, map_name, alarm_tag, x, y
        )
        values (
          #{time, jdbcType=TIMESTAMP},
          #{geofenceId, jdbcType=BIGINT},
          #{geofenceName, jdbcType=VARCHAR},
          #{mapId, jdbcType=BIGINT},
          #{mapName, jdbcType=VARCHAR},
          #{alarmTag, jdbcType=VARCHAR},
          #{x, jdbcType=DOUBLE},
          #{y, jdbcType=DOUBLE}
        )
    </insert>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from alarm
        where id = #{id, jdbcType=BIGINT}
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from alarm
        order by time desc
    </select>

    <select id="selectByCondition" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from alarm
        <where>
            <if test="geofenceName != null and geofenceName != ''">
                and geofence_name like concat('%', #{geofenceName}, '%')
            </if>
            <if test="mapId != null">
                and map_id = #{mapId}
            </if>
            <if test="startTime != null">
                and time &gt;= #{startTime}
            </if>
            <if test="endTime != null">
                and time &lt;= #{endTime}
            </if>
        </where>
        <choose>
            <when test="sortField != null and sortField != '' and sortOrder != null and sortOrder != ''">
                order by 
                <choose>
                    <when test="sortField == 'time'">time</when>
                    <when test="sortField == 'geofenceName'">geofence_name</when>
                    <when test="sortField == 'mapName'">map_name</when>
                    <otherwise>time</otherwise>
                </choose>
                <choose>
                    <when test="sortOrder == 'asc'">asc</when>
                    <otherwise>desc</otherwise>
                </choose>
            </when>
            <otherwise>
                order by time desc
            </otherwise>
        </choose>
    </select>

    <delete id="deleteById" parameterType="java.lang.Long">
        delete from alarm
        where id = #{id, jdbcType=BIGINT}
    </delete>
</mapper> 